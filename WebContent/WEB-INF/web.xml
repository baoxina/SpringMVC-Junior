<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="WebApp_ID" version="3.0">
  <display-name>SpringMVC-Junior</display-name>
  <welcome-file-list>
    <welcome-file>index.html</welcome-file>
    <welcome-file>index.htm</welcome-file>
    <welcome-file>index.jsp</welcome-file>
    <welcome-file>default.html</welcome-file>
    <welcome-file>default.htm</welcome-file>
    <welcome-file>default.jsp</welcome-file>
  </welcome-file-list>
  
  <!-- 配置springmvc前端控制器 -->
  <servlet>
  	<servlet-name>springmvc</servlet-name>
  	<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
  	<!-- contextConfigLocation配置springmvc加载的配置文件(配置处理器映射器，处理器适配器，视图解析器等等的配置文件) -->
  	<!-- 如果不配置contextConfigLocation，默认加载的是/WEB-INF/servlet名称-servlet.xml文件(即在此例子中为springmvc-servlet.xml) -->
  	<init-param>
  		<param-name>contextConfigLocation</param-name>
  		<!-- 一般配置文件配置方式 -->
  		<!-- <param-value>classpath:springmvc/springmvc.xml</param-value> -->
  		<!-- 开启注解扫描配置方式 -->
  		<param-value>classpath:springmvc/springmvc-annotation.xml</param-value>
  	</init-param>
  </servlet>
  <servlet-mapping>
  	<servlet-name>springmvc</servlet-name>
  	<!-- url-pattern配置的几种方式(两种) -->
  	<!-- 第一种：*.action         以.action结尾的请求会由DispatcherServlet进行解析 -->
  	<!-- 第二种：/                所有访问的地址都由DispatcherServlet进行解析，对于静态文件的解析需要配置不让DispatcherServlet进行解析。使用此种方式可以实现解析RESTful风格的url-->
  	<!-- 第三种：/*               这样配置不对，使用这种配置，如果需要将请求转发到一个jsp页面时，仍然会由DispatcherServlet解析jsp地址，不能根据jsp页面找到handler，会报错 -->
  	<url-pattern>*.action</url-pattern>
  </servlet-mapping>
  
  
  
  
  
  
  
  
</web-app>